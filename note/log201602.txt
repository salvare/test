
4.[Keyword] Hash 哈希、散列
*概念：就是把任意长度的输入，通过散列算法，变换成固定长度的输出
*应用：根据散列函数H(key)和处理冲突的方法将一组关键字映象到一个有限的连续的地址集（区间）上
*注意：这种转换是一种压缩映射，也就是，散列值的空间通常远小于输入的空间，不同的输入可能会散列成相同的输出，所以不可能从散列值来唯一的确定输入值。也就是存在冲突。
*hash(散列)不是某种具体的函数、算法，有多种hash函数
*原文：http://baike.baidu.com/link?url=v4w9aNX6M4Gpc3rUe6CWsA9MFBafItNp0u9VP_JieiwfwKH4twe-QWAqPSPzlFw5qnqUcZtpNTtFh0MIGRZYDq


1.[Keyword] web2.0
*http://baike.baidu.com/view/733.htm

2.[Keyword] acid（数据库事务正确执行的四个基本要素）
*原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）
*http://baike.baidu.com/subview/600227/5926023.htm

3.[Keyword] NoSQL(非关系型数据库)
*原文：http://blog.csdn.net/robinjwong/article/details/18502195	(very nice arcticle)
*参考：http://book.51cto.com/art/201308/407446.htm	(very nice arcticle)


1.[Keyword] AOP( Aspect Oriented Programming 面向切面编程 )
*原文：http://baike.baidu.com/link?url=HLKqDgqZitmNo3IGsgC0Qh0IGZxVNsNwu5L54l5OeSQvjkaEvQGfJuYjC1IJZT7Kfrj4W5Yn7p6cWBLrXYxCygnC5Je5HNdvFpCc111h1di	(very nice article)

2.[Keyword] 耦合性(Coupling)
*原文：http://baike.baidu.com/view/1731634.htm
*划分模块的一个准则就是高内聚低耦合


1.[PHP] 探究php底层运行机制
*原文：http://blog.csdn.net/shupan001/article/details/7176169（深入浅出,需常复读）【excellent】
*PHP随着 服务器(Apache) 的启动而运行
*PHP与Apache通过 SAPI(服务器应用程序编程接口) 实现连接
  在X系统(Unix,Linux)中，即mod_php5.so模块
  在Win系统中，php5apache2.dll
*PHP总共有三个模块：
  a.内核：处理请求、文件流、错误处理等
  b.Zend引擎：将源文件转换成机器语言，然后在虚拟机上运行
  c.以及扩展层：是一组函数、类库和流。例如需要mysql扩展来连接数据库
*PHP生命周期
  a.调用各个扩展的MINIT(模块初始化)方法，从而使这些扩展切换到可用状态；初始化一些环境变量，这将在整个SAPI生命周期中发生作用
  b.当一个页面请求发生时，SAPI层将控制权交给PHP层；根据程序，PHP调用相应模块的RINIT(请求初始化)方法。例如：Session模块的RINIT，如果在php.ini中启用了Session模块，那在调用该模块的RINIT时就会初始化$_SESSION变量，并将相关内容读入
  c.一旦页面执行完毕（无论是执行到了文件末尾还是用exit或die函数中止），PHP就会启动清理程序。调用各个模块的RSHUTDOWN方法。
  d.所有的请求都已处理完毕，SAPI也准备关闭,PHP调用每个扩展的MSHUTDOWN方法。
  注意：b.c.两步会多次循环，直到所有请求处理完毕
*文中还详细介绍了Apache的生命周期，有图，在此不赘述
*其实这句话才是我想要的：
  问：php在多用户同时访问的情况下 是怎么执行程序的？
  答：你想多了 PHP程序运行是在自己的内存空间中的 不会影响别的PHP空间的


1.[PHP] 字符串函数 htmlspecialchars()
*功能：	把HTML中的 预定义字符 转换为 HTML实体。
*例：	& => &amp; 空格 => &nbsp; < => &lt;


2.[PHP] 字符串函数 strip_tags()
*功能：	剥去字符串中的 HTML 标签：


php表单令牌防止重复提交原理
http://www.111cn.net/phper/phpanqn/58764.htm
session 和 cookie 两种方法

