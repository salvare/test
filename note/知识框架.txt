@前言：有一个粗略的目标，通晓IT。但是，尽管一直有心向目标前进，但是从业1年半以来进展很小。
从事PHP的Web开发，我首先试图去了解视野所及的东西：【服务器端脚本语言】(PHP)，【服务器】(Apache)，【数据库】(MySQL)，【网络协议】(HTTP)，【Web前端】(HTML,CSS,JS)。
接触操作系统(Linux)后，投入了很大的精力。有很多收获（在linux的笔记中有具体记录），但是我依然几乎无法使用【Linux】(这与我的学习重点并不偏向应用，以及看得多练得少有关)。重述一下，学习Linux对我的帮助很大，原因在于OS包含了庞大的知识结构，很多知识点展现在我面前，并且还连接起来。PHP是我的第一座“小岛”，可以看到周围窄窄的风光；相比而言，Linux给了我一座大陆(至少也是澳洲吧)，等着我去探索。
还有一点重要的收获是，我意识到“掌握知识点”并不足以开发一个系统。从技术角度，需要考虑系统稳定性(判断)，出现新需求是否易扩展(设计)，需求变动是否方便修改(配置，常量)，代码自身性能是否过关，功能实现方式是否合理，代码逻辑是否清晰，备注是否齐全，是否易维护(复用)。。从项目策划角度(这方面经验和思考都比较少)，需要收集需求，整理需求规划系统的功能结构，分析系统在各个方面使用何种技术实现，安排人员组成项目组，制定组员的合作规范，预估开发周期、制作项目进度表，项目进度的追踪机制，项目测试机制。。这两方面的工作，似乎不去做也可以去开发项目。但越是大型的项目，越是不可避免的去思量梳理。也许从前只是依赖项目负责人的长期摸索所获得的经验。但现今的很多超大型项目，人们不得不专门研究去如何开发它，于是曾经的“经验”被收集、研究、实践、验证、扩展之后，形成了学科。前者叫【系统架构】，后者叫【项目规划】。也是我的两个转职方向：系统架构师 和 项目经理。
以上是我目前的技能，掌握程度各有深浅。
在各项实践中，我还得知这些“知识点”存在：【算法】、【数据结构】、【计算机网络】、【计算机系统】、【C语言】、【汇编】、【编译原理】等等等等。
我想通过构建“知识框架”，形成明确的目标，加快成长进度。
另外，最终目标“通晓IT”本身可能吗？我不知道，但是有榜样，有鸟哥这样的现役业界大牛。也许不能全知全能，但是可以举一反三。
以上。

@长期做以下几件事：
*记录遇到的问题，看到的概念【记录问题】
*将其纳入知识框架；如果不能，扩展知识框架【归纳入知识点】
*逐步认知知识框架的节点【攻略知识点】
*回头解决问题【验证】

@学习顺序
*知识点一定会积累很多，所以顺序很重要
1.被其它知识点 所依赖的 知识点
2.实用的，对工作有着迅速帮助的知识点

@知识框架

C++	《C++程序设计语言》	
C#
C
JAVA	Spring	Hibernate		
Python
PHP

Html5

数据库	Oracle	Redis
数据存储
大数据	《数据挖掘》	数据处理
数据结构	《数据科学导论》【？】

Linux

IOS
Android

算法(https://www.zhihu.com/question/27984119)

架构（软件）

项目管理	《人月神话》

编译原理

计算机原理

测试	自动化测试	单元测试【？】

云计算(https://www.zhihu.com/question/20124989)		OpenStack
分布式	Hadoop

人工智能	机器学习

设计	
交互设计	
原型设计(Prototype)	Axure

R语言

SEO

游戏	Unity	

黑客

美工	PS

IT历史

Office	Excel	


@ ESSAY
《预测分析建模：Python与R语言实现》【？】
《机器之心》
《科技之巅》
树莓派	Arduino

@ First Season
Linux	《鸟哥》
C语言	《c primer plus》
算法	《数据结构与算法分析 c》
计算机原理《深入理解计算机系统》






